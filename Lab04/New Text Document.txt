.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
       
MSG1 DB 'ENTER AN INPUT: $'
MSG2 DB '   Greater Than 5 $'
MSG3 DB '   Equal to 5  $'  
MSG4 DB '   Less Than 5 $'

 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA
    MOV DS,AX

    
    
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
    
    
    MOV AH,1
    INT 21H
    MOV CL,AL 
    SUB CL,48  
    
        
          CMP CL,5
          JL Less
          JE Equal
          JG Greater
          
    Less: 
            
    LEA DX,MSG4
    MOV AH,9
    INT 21H 
    JMP END_CASE
    
    
    
    Equal:
            
    LEA DX,MSG3
    MOV AH,9
    INT 21H 
    JMP END_CASE
    
    
    
        
    Greater:
            
    LEA DX,MSG2
    MOV AH,9
    INT 21H
    JMP END_CASE
    
    
    
    END_CASE: 
    
    
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   


------------------------------------------------------------------------------------------------



6.2


.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
                
MSG1 DB 'Absolute value is: '

 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA
    MOV DS,AX
    
        
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
     
    MOV BX,8
    
    CMP BX,0
    JNL END_IF 
    
    NEG BX

    
    
    END_IF:
    
    LEA DX,BX
    MOV AH,9
    INT 21H
    
    
    MOV AH,0
    INT 16H
    
    MAIN ENDP
END MAIN   

--------------------------------------------------------------------------------------------------------------------------------------------

.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
MSG1 DB 'Absolute value is: '
 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA 
    MOV DS,AX 
  
    

    
    
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
    
    
    MOV BX,-9
    MOV CL,-9
     
  
    
        
          CMP CL,0
          JL Less
          JG Greater
          
    Less: 
            
    LEA DX,BX
    MOV AH,9
    INT 21H 
    JMP END_CASE

    
    
        
    Greater:
            
    LEA DX,BX
    MOV AH,9
    INT 21H
    JMP END_CASE
    
    
    
    END_CASE: 
    
    
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   

===========================================================================================================

.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
       
MSG1 DB 'Absolute value is: $'


 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA 
    MOV DS,AX
    
    
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
    MOV DL, 0DH
    MOV DL, 0AH 
   
    
    
    MOV AL,'9'  
    
    CMP AL,0
    JMP END_IF
    
    NEG AL
    
    
    END_IF:
    
    MOV DL,AL
    MOV AH,2
    INT 21H
          
          
        
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   


==================================================================================================================



6.3

.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA 
    MOV DS,AX 
    
    MOV AL,'Z'
    MOV BL,'L'
  
    

    MOV AH,2 
    
    CMP AL,BL
    JNBE ELSE_
    
    MOV DL,AL
    JMP DISPLAY
    
    
    ELSE_:
          MOV DL,BL
    
    DISPLAY:
          INT 21H

    
    
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   
----------------------------------------------------------------------------------------------------------------------------------------------
6.4

.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
       
MSG1 DB 'ENTER AN INPUT: $'
MSG2 DB '   POSITIVE $ '
MSG3 DB '   ZERO $ '  
MSG4 DB '   NEGATIVE $ '

 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA
    MOV DS,AX

    
    
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
    
    
    MOV AH,1
    INT 21H
    MOV CL,AL 
    SUB CL,48
   
     
    
        
          CMP CL,0
          JL NEGATIVE
          JE ZERO
          JG POSITIVE
          
    NEGATIVE: 
            
    LEA DX,MSG4
    MOV AH,9
    INT 21H 
    JMP END_CASE
    
    
    
    ZERO:
            
    LEA DX,MSG3
    MOV AH,9
    INT 21H 
    JMP END_CASE
    
    
    
        
    POSITIVE:
            
    LEA DX,MSG2
    MOV AH,9
    INT 21H
    JMP END_CASE
    
    
    
    END_CASE: 
    
    
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   

=====================================================
6.5


.MODEL SMALL
.STACK 100H
.DATA
    CR EQU '0DH'
    LF EQU '0AH'
    
       
MSG1 DB 'ENTER AN INPUT: $'
MSG2 DB '   POSITIVE $ '
MSG3 DB '   ZERO $ '  
MSG4 DB '   NEGATIVE $ '

 

.CODE

 

MAIN PROC
        
    MOV AX,@DATA 
    MOV DS,AX
    
    
    LEA DX,MSG1
    MOV AH,9
    INT 21H 
    MOV DL, 0DH
    MOV DL, 0AH
    
    
    MOV AH,1
    INT 21H
    MOV CL,AL 
    SUB CL,48  
    
        
          CMP CL,1
          JE ODD
          CMP CL,3 
          JE ODD
          
          CMP CL,2
          JE EVEN
          CMP CL,4
          JE EVEN 
          JMP END_CASE
          
          
          ODD:
             MOV DL,'O'
             JMP DISPLAY
             
             
          EVEN:
              MOV DL,'E'
              
          DISPLAY:
              MOV AH,2
              INT 21H
              
          END_CASE:
          
          
        
    MOV AH,4CH
    INT 21H
    
    MAIN ENDP
END MAIN   

   

    











